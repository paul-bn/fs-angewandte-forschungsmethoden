import pandas as pd import os import matplotlib.pyplot as pltos.chdir("/Users/paulbenjamins/Desktop/data_afm")df = pd.read_csv("factors.csv")df = df.drop(columns=(["Unnamed: 0","HML_Europe","HML_Global","HML_US","SMB_Europe","SMB_Global","SMB_US","UMD_Europe","UMD_Global","UMD_US","D.Recession","P.Recession"]))df["RF"] = df["RF"] / 100#df.to_excel("/Users/paulbenjamins/Desktop/data_afm/factors.xlsx")#Sharpe Ratio Betrachtung , far away from finished#BAB Gloabl#sharpe_BAB_g = df["BAB_Global"].mean() / df["BAB_Global"].std()#Mkt Global#sharpe_Mkt_g = df["Mkt_Global"].mean() / df["Mkt_Global"].std()#GLOBALdf["BAB_Global_return"] = df["BAB_Global"] + df["RF"]df["Mkt_Global_return"] = df["Mkt_Global"] + df["RF"]Global_BAB = 1 + df["BAB_Global_return"].to_frame()Global_Mkt = 1 + df["Mkt_Global_return"].to_frame()bab_cum_g = Global_BAB["BAB_Global_return"].cumprod().to_frame()mkt_cum_g = Global_Mkt["Mkt_Global_return"].cumprod().to_frame()bab_cum_g ["Mkt_Global_return"] = mkt_cum_g ["Mkt_Global_return"]bab_mkt_cum_g = bab_cum_gbab_mkt_cum_g["time"] = df["mdate"]bab_mkt_cum_g = bab_cum_g.set_index("time")plt.plot(bab_mkt_cum_g.index.astype(str), bab_mkt_cum_g[["BAB_Global_return","Mkt_Global_return"]].values, label=["BAB","Market"])plt.gca().xaxis.set_major_locator(plt.MaxNLocator(12))plt.xticks(rotation=60)plt.title("Global")plt.legend()plt.show()#USdf["BAB_US_return"] = df["BAB_US"] + df["RF"]df["Mkt_US_return"] = df["Mkt_US"] + df["RF"]US_BAB = 1 + df["BAB_US_return"].to_frame()US_Mkt = 1 + df["Mkt_US_return"].to_frame()bab_cum_us = US_BAB["BAB_US_return"].cumprod().to_frame()mkt_cum_us = US_Mkt["Mkt_US_return"].cumprod().to_frame()bab_cum_us ["Mkt_US_return"] = mkt_cum_us ["Mkt_US_return"]bab_mkt_cum_us = bab_cum_usbab_mkt_cum_us["time"] = df["mdate"]bab_mkt_cum_us = bab_cum_us.set_index("time")plt.plot(bab_mkt_cum_us.index.astype(str), bab_mkt_cum_us[["BAB_US_return","Mkt_US_return"]].values, label=["BAB","Market"])plt.gca().xaxis.set_major_locator(plt.MaxNLocator(12))plt.xticks(rotation=60)plt.title("US")plt.legend()plt.show()#EUROPEdf["BAB_Europe_return"] = df["BAB_Europe"] + df["RF"]df["Mkt_Europe_return"] = df["Mkt_Europe"] + df["RF"]EU_BAB = 1 + df["BAB_Europe_return"].to_frame()EU_Mkt = 1 + df["Mkt_Europe_return"].to_frame()bab_cum_eu = EU_BAB["BAB_Europe_return"].cumprod().to_frame()mkt_cum_eu = EU_Mkt["Mkt_Europe_return"].cumprod().to_frame()bab_cum_eu ["Mkt_Europe_return"] = mkt_cum_eu ["Mkt_Europe_return"]bab_mkt_cum_eu = bab_cum_eubab_mkt_cum_eu["time"] = df["mdate"]bab_mkt_cum_eu = bab_cum_eu.set_index("time")plt.plot(bab_mkt_cum_eu.index.astype(str), bab_mkt_cum_eu[["BAB_Europe_return","Mkt_Europe_return"]].values, label=["BAB","Market"])plt.gca().xaxis.set_major_locator(plt.MaxNLocator(12))plt.xticks(rotation=60)plt.title("Europe")plt.legend()plt.show()#ONLY BAB#plt.plot(bab_cum_g,label="GLOBAL")#plt.plot(bab_cum_us,label="US")#plt.plot(bab_cum_eu,label="EUROPE")#plt.legend()#plt.show()